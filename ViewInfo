package sample;

import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.scene.paint.Color;
import javafx.stage.Stage;
import java.io.File;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

public class ViewInfo {

    public ViewInfo(Stage viewInfoStage, Scene viewInfoScene, BorderPane viewInfoBorder, String profName, ArrayList userStr) {

        viewInfoStage.setScene(viewInfoScene);
        viewInfoStage.setTitle("View Daily Progress" + " (" + profName + ")");
        viewInfoStage.setMaxHeight(600);
        viewInfoStage.setMaxWidth(625);


        BorderPane border = new BorderPane();
        GridPane leftGrid = new GridPane();
        ScrollPane scrollLeft = new ScrollPane(leftGrid);
        GridPane centerGrid = new GridPane();
        GridPane bottomGrid = new GridPane();

        Label weightLabel = new Label("Weight: ");
        Label heightLabel = new Label("Height: ");
        Label calLabel = new Label("Calories: ");
        Label exLabel = new Label("Exercise: ");
        Label BMILabel = new Label("BMI: ");
        Label weightText = new Label();
        Label heightText = new Label();
        Label calText = new Label();
        Label exText = new Label();
        Label BMIText = new Label();


        Button goBack = new Button("Back to Main Menu");

        ArrayList<String> dateList = new ArrayList<String>();
        ArrayList<String> weightList = new ArrayList<String>();
        ArrayList<String> heightList = new ArrayList<String>();
        ArrayList<String> calList = new ArrayList<String>();
        ArrayList<String> exerciseList = new ArrayList<String>();

        viewInfoBorder.setLeft(border);
        border.setLeft(scrollLeft);
        leftGrid.setAlignment(Pos.TOP_LEFT);

        viewInfoBorder.setBottom(bottomGrid);

        viewInfoBorder.setCenter(centerGrid);
        centerGrid.setBorder(new Border(new BorderStroke(Color.BLACK,
                BorderStrokeStyle.SOLID, CornerRadii.EMPTY, BorderWidths.DEFAULT)));
        centerGrid.setBackground(new Background(new BackgroundFill(Color.LIGHTGREY, CornerRadii.EMPTY, Insets.EMPTY)));

        centerGrid.add(weightLabel, 0, 0);
        centerGrid.add(weightText, 1, 0);
        centerGrid.add(heightLabel, 0, 1);
        centerGrid.add(heightText, 1, 1);
        centerGrid.add(calLabel, 0, 2);
        centerGrid.add(calText, 1, 2);
        centerGrid.add(exLabel, 0, 3);
        centerGrid.add(exText, 1, 3);
        centerGrid.add(BMILabel,0,4);
        centerGrid.add(BMIText,1,4);

        bottomGrid.add(goBack, 0, 0);

        try {
            Scanner sd = new Scanner(new File(profName + "Date.txt"));
            Scanner sw = new Scanner(new File(profName + "Weight.txt"));
            Scanner sh = new Scanner(new File(profName + "Height.txt"));
            Scanner sc = new Scanner(new File(profName + "Calories.txt"));
            Scanner se = new Scanner(new File(profName + "Exercise.txt"));

            while (sd.hasNext()) {
                dateList.add(sd.next());
            }
            while (sw.hasNext()) {
                weightList.add(sw.next());
            }
            while (sh.hasNext()) {
                heightList.add(sh.next());
            }
            while (sc.hasNext()) {
                calList.add(sc.next());
            }
            while (se.hasNext()) {
                exerciseList.add(se.next());
            }

        } catch (Exception e1) {
            System.out.println("error in scanning from .txt file to arrayList");
        }


        DecimalFormat decimal = new DecimalFormat("#.##");

        for (int i = 0; i < dateList.size(); i++) {
            Button dateBtn = new Button(dateList.get(i));
            leftGrid.add(dateBtn, 0, i);

            int finalI = i;
            dateBtn.setOnAction(event ->
            {

                weightText.setText(weightList.get(finalI));
                heightText.setText(heightList.get(finalI));
                calText.setText(calList.get(finalI));
                exText.setText(exerciseList.get(finalI));
                BMI bmi = new BMI(Double.parseDouble(heightText.getText()),Double.parseDouble(weightText.getText()));
                BMIText.setText((Double.parseDouble(decimal.format(bmi.getBMI()))) + " (" + bmi.getHealth() + ")");

            });
        }
        goBack.setOnAction(event ->
        {
            new MainMenu(viewInfoStage, profName, userStr);
        });
    }

}
